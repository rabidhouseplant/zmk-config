name: Build ZMK Firmware

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable # Use the official ZMK build container

    strategy:
      fail-fast: false
      matrix:
        # ================= IMPORTANT ==================
        # Define your build matrix below.
        # - Add one 'include' block for each keyboard shield/board combination you want to build.
        # - Replace 'nice_nano_v2' with your actual board name(s).
        # - Replace 'corne_left' and 'corne_right' with your actual shield name(s)
        #   (These should match the names of your .conf/.keymap files in the root).
        # ==============================================
        include:
          - board: nice_nano_v2 # <--- CHANGE THIS TO YOUR BOARD
            shield: corne_left # <--- CHANGE THIS TO YOUR SHIELD (e.g., first half)
          - board: nice_nano_v2 # <--- CHANGE THIS TO YOUR BOARD
            shield: corne_right # <--- CHANGE THIS TO YOUR SHIELD (e.g., second half)
          # Add more blocks if you have more shields/boards

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify essential commands # <-- Add this step
        run: |
          echo "--- Checking west ---"
          command -v west || echo "ERROR: west not found"
          echo "--- Checking cmake ---"
          command -v cmake || echo "ERROR: cmake not found"
          echo "--- Checking ninja ---"
          command -v ninja || echo "ERROR: ninja not found"
          echo "--- Checking arm-none-eabi-gcc ---"
          command -v arm-none-eabi-gcc || echo "ERROR: gcc not found"
          echo "--- PATH ---"
          echo $PATH

      - name: Force refresh west.yml # <-- Existing step
        run: |
          # ... (rest of script) ...

      # ... rest of your workflow steps ...  

      - name: Initialize west workspace
        run: west init -l # Initialize locally based on west.yml in root
      - name: Update west dependencies
        run: west update # Fetch ZMK, Zephyr, modules defined in west.yml
          # Optional: Cache west dependencies (runs after west update)
          # - name: Cache west dependencies
          #   uses: actions/cache@v4
          #   env:
          #     cache-name: cache-zephyr-modules
          #   with:
          #     path: |
          #       bootloader/
          #       modules/
          #       tools/
          #       zephyr/
          #       zmk/
          #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('west.yml') }}
          #     restore-keys: |
          #       ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build firmware
        run: |
             run: |
              echo "Building for board: ${{ matrix.board }} shield: ${{ matrix.shield }}"
              west build -s zmk/app -p -b ${{ matrix.board }} -d build/${{ matrix.shield }} -- -DSHIELD=${{ matrix.shield }} -DZMK_CONFIG="${GITHUB_WORKSPACE}"
#           ^^^^^^^^^^^ Add this argument

      - name: Archive firmware
        uses: actions/upload-artifact@v4
        with:
              name: firmware-${{ matrix.shield }} # Name the artifact zip file
              path: build/${{ matrix.shield }}/zephyr/zmk.uf2 # Path to the firmware file to upload